# This workflow builds and publishes the .NET application for multiple platforms
# and uploads the binaries as downloadable artifacts

name: Build and Publish Cross-Platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        os: [windows, linux]
        include:
          - os: windows
            runtime: win-x64
            artifact-name: conductor-health-check-windows
            file-extension: .exe
          - os: linux
            runtime: linux-x64
            artifact-name: conductor-health-check-linux
            file-extension: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore Conductor_Health_Check.sln

    - name: Run tests
      run: dotnet test Conductor_Health_Check.sln --no-restore --verbosity normal

    - name: Publish application
      run: |
        dotnet publish Conductor_Health_Check/Conductor_Health_Check.csproj \
          --configuration Release \
          --runtime ${{ matrix.runtime }} \
          --self-contained true \
          --output ./publish/${{ matrix.os }} \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=true

    - name: Create release directory
      run: |
        mkdir -p ./release
        cp -r ./publish/${{ matrix.os }}/* ./release/
        
    - name: List published files
      run: ls -la ./release/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ./release/
        retention-days: 30

  create-release-info:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Create Release Info
      run: |
        echo "## ðŸš€ Build Artifacts Available" > release-info.md
        echo "" >> release-info.md
        echo "The following artifacts have been built and are available for download:" >> release-info.md
        echo "" >> release-info.md
        echo "- **Windows (x64)**: conductor-health-check-windows" >> release-info.md
        echo "- **Linux Ubuntu (x64)**: conductor-health-check-linux" >> release-info.md
        echo "" >> release-info.md
        echo "### How to run:" >> release-info.md
        echo "1. Download the appropriate artifact for your platform" >> release-info.md
        echo "2. Extract the files" >> release-info.md
        echo "3. Run the executable:" >> release-info.md
        echo "   - Windows: \`Conductor_Health_Check.exe\`" >> release-info.md
        echo "   - Linux: \`./Conductor_Health_Check\` (make sure it's executable: \`chmod +x Conductor_Health_Check\`)" >> release-info.md
        echo "" >> release-info.md
        echo "The application will start on http://localhost:5000 by default." >> release-info.md
        
    - name: Upload Release Info
      uses: actions/upload-artifact@v4
      with:
        name: release-info
        path: release-info.md
